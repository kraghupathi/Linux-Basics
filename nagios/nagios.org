* Nagios
Nagios is one of the most popular computer network monitoring software
application. It is developed by Ethan Galstad, as an open source,
Unix-based enterprise monitoring package with a web-based front-end or
console. It provides monitoring of network services (SMTP, POP3, HTTP,
FTP, SNMP, SSH) and host resources (processor load, disk usage, system
logs) and essentially any device or service that have address and can
be contacted via TCP/IP. It can monitor host running Microsoft
Windows, Unix/Linux, Novell Netware, and other operating system.

which can be used for network and infrastructure monitoring. Nagios
will monitor servers, switches, applications and services. It alerts
the System Administrator when something went wrong and also alerts
back when the issues has been rectified.
   - With Nagios you can:
      + Monitor your entire IT infrastructure.
      + Identify problems before they occur.
      + Know immediately when problems arise.
      + Share availability data with stakeholders.hypothetical question
      + Detect security breaches.
      + Plan and budget for IT upgrades.
      + Reduce downtime and business losses.
* Why Nagios?
  - Nagios is open source and O’Reilly ranks it as the #2 open source
    packages for System Administrators
  - Nagios has a web interface. Regardless of your location, you can
    always check your network’s health as long as you have access to a
    web browser.
  - Not only can you monitor network services (HTTP, FTP, etc), you
    can also monitor host resources (disk and memory usage, processes,
    log files, etc. Nagios will also monitor environmental factors too
    (temperature).
  - *Reporting.* You can easily create reports on trends, availability,
    alerts, notifications via the web interface
  - *Plugins.* You can easily develop your own host and service checks
    if Nagios does not have exactly what you need
  - *Schedule downtime.* We all have to upgrade our servers or restart
    them at some point. Nagios allows you to easily define “downtime”
    so you are not notified during scheduled maintenance.
  - You can use the web interface to acknowledge any problems (so you
    can stop getting notified over and over again until the problem is
    resolved).
  - *Redundant and failover network monitoring.* Great, you have monitor
    your network and servers from within your own network, but what
    happens when that goes down? Multiple installs (master and slave)
    of Nagios can be configured to communicate with each other so if
    one network cannot be contacted, the other Nagios install will
    take over.

* Nagios Architecture
In order to get clearer picture of how Nagios works, it is necessary
to look into its architecture. Its architecture is based or built on a
server/client model.  This architecture can be seen in the Graph 6
below. This depicts a Nagios server running on a host, and plug-ins
running on the server and all other remote hosts to be monitored. This
plug-ins sends information to the server, which in turn displays them
on GUI.
[[./nagios_architecture.png]]
In addition, Nagios can be said to be composed of three parts namely; A
scheduler, a GUI, and the plug-ins. These are described as below:
 * *A scheduler:* is a server part of Nagios that checks plug-ins at
   regular interval and do some actions according to the results from
   the checked plug-ins.
 * *A GUI:* is the interface of Nagios that is displayed in webpage
   generated by the Common Gateway Interface (CGI). The interface can
   display configurations, alerts, state buttons (green, OK/red,
   Error), MRTG graphs etc.
 * *The plug-ins:* They are configurable by the user. They check a
   service and return a result to the Nagios server in order to take
   corresponding actions.
** Prerequisites 
#+BEGIN_EXAMPLE
rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
#+END_EXAMPLE
To install the following prerequisites too. All commands should be run as root user.
#+BEGIN_EXAMPLE
yum install gd gd-devel gcc glibc glibc-common
#+END_EXAMPLE
** Install Nagios
I tested this how-to on CentOS 6.5 server, although it should work on
all RHEL 6.x and its clones like CentOS 6.x and Scientific Linux 6.x.

Nagios will not be found in CentOS official repositories, so let us
add the EPEL repository to install nagios. To add and enable EPEL
repository, refer the following steps.
#+BEGIN_EXAMPLE
yum -y install nagios nagios-plugins-all nagios-plugins-nrpe nrpe php httpd
yum install nagios*
#+END_EXAMPLE
#+BEGIN_EXAMPLE
chkconfig httpd on && chkconfig nagios on
service httpd start && service nagios start
#+END_EXAMPLE
*Note:* It worked for me either if i keep SELINUX and iptables enable or disable. All you need to do is allow the apache port through iptables as shown below.
#+BEGIN_EXAMPLE
vi /etc/sysconfig/iptables
#+END_EXAMPLE
Add the following line:
#+BEGIN_EXAMPLE
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
#+END_EXAMPLE
Save and close the file. Restart iptables.
#+BEGIN_EXAMPLE
service iptables restart
#+END_EXAMPLE
** Configure Nagios
Add the admin mail address in the nagios contact file to receive alerts from nagios server. To do that edit file =/etc/nagios/objects/contacts.cfg=
#+BEGIN_EXAMPLE
vi /etc/nagios/objects/contacts.cfg
#+END_EXAMPLE
Find the following line and enter the email id:
#+BEGIN_EXAMPLE
email                           kraghu.mails@gmail.com ;
#+END_EXAMPLE
Save and close the file. Then Edit file =/etc/httpd/conf.d/nagios.conf=
#+BEGIN_EXAMPLE
vi /etc/httpd/conf.d/nagios.conf
#+END_EXAMPLE
And edit the following lines if you want to access nagios administrative console from a particular IP series. Here i want to allow nagios administrative access from 192.168.1.0/24 series only.
#+BEGIN_EXAMPLE
## Comment Lines 15 & 16 ##
#   Order allow,deny
#   Allow from all
## Uncomment and Change lines 17,18 & 19 as shown below ##
Order deny,allow
Deny from all
Allow from 127.0.0.1 10.4.15.239
#+END_EXAMPLE
** Set nagiosadmin password
#+BEGIN_EXAMPLE
htpasswd /etc/nagios/passwd nagiosadmin
New password:
Re-type new password:
Updating password for user nagiosadmin
#+END_EXAMPLE
Start nagios and httpd services and let them to start automatically on every boot.
#+BEGIN_EXAMPLE
service nagios start
service httpd start
chkconfig nagios on
chkconfig httpd on
#+END_EXAMPLE
** Access Nagios admin console
pen nagios administrator console with URL http://nagios-server-ip/nagios and enter the username as nagiosadmin and its password which we created in the earlier steps.
[[./New-Tab-Mozilla-Firefox_001-790x478.jpg]]
This is how Nagios administrative console looks:
[[./Nagios-Core-Mozilla-Firefox_002-790x478.jpg]]
Click on the *“Hosts”* section in the left pane of the console. You will see the no of hosts to be monitored by Nagios server. Initially, the nagios server (localhost) itself will only be monitored.
[[./Nagios-Core-Mozilla-Firefox_003-790x478.jpg]]
Click on the monitoring host to display more details:
[[./Nagios-Core-Mozilla-Firefox_004-790x478.jpg]]
** Add Monitoring targets to Nagios server
Now let us add some clients to monitor by Nagios server. To do that we have to install *nrpe* and *nagios-plugins* in our monitoring targets.

On CentOS/RHEL/Scientifc Linux clients:

Like i said before, you have to add EPEL repository in your CentOS/RHEL/Scientific Linux 6.x clients to install *nrpe* package.

Install *“nrpe”* and *“nagios-plugins”* packages in client systems to be monitored.
#+BEGIN_EXAMPLE
yum install nrpe nagios-plugins-all openssl
#+END_EXAMPLE
** Configure Monitoring targets
Edit =/etc/nagios/nrpe.cfg= file,
#+BEGIN_EXAMPLE
vi /etc/nagios/nrpe.cfg
#+END_EXAMPLE
Add your Nagios server ip address
#+BEGIN_EXAMPLE
## Line 81 - Add the Nagios server IP ##
allowed_hosts=127.0.0.1 10.4.15.239
#+END_EXAMPLE
Start nrpe service:
#+BEGIN_EXAMPLE
service nrpe start
chkconfig nrpe on
#+END_EXAMPLE
Now go back to your Nagios server to add the clients to be monitored through nagios server. Edit *“/etc/nagios/nagios.cfg”* file,
#+BEGIN_EXAMPLE
vi /etc/nagios/nagios.cfg
#+END_EXAMPLE
and uncomment the following lines.
#+BEGIN_EXAMPLE
## Line 52 - Uncomment ##
cfg_dir=/etc/nagios/servers
#+END_EXAMPLE
Create a directory called *“servers”* under *“/etc/nagios/”*.
#+BEGIN_EXAMPLE
mkdir /etc/nagios/servers
#+END_EXAMPLE
Create config file to the client to be monitored:
#+BEGIN_EXAMPLE
vi /etc/nagios/servers/clients.cfg
#+END_EXAMPLE
#+BEGIN_EXAMPLE
define host{
use                             linux-server
host_name                       client
alias                           client
address                         10.4.15.239
max_check_attempts              5
check_period                    24x7
notification_interval           30
notification_period             24x7
}
#+END_EXAMPLE
Finally restart nagios service.
#+BEGIN_EXAMPLE
service nagios restart
#+END_EXAMPLE
Now open the nagios admin console in the browser and navigate to
“Hosts” section in the left pane. You will see the newly added client
will be visible there. Click on the host to see if there is anything
wrong or alerts.
[[./Nagios-Core-Mozilla-Firefox_005-790x478.jpg]]
Click on the monitoring target, you’ll get the detailed output:
[[./Nagios-Core-Mozilla-Firefox_006-790x478.jpg]]

Like this way, you can define more clients by creating a separate config files =/etc/nagios/servers= directory for each client.
** Define services
We did define the monitoring host before. Now let us add some services
of the monitoring host. For example to monitor the ssh service, add
the following lines shown in the =/etc/nagios/servers/clients.cfg=
file.
#+BEGIN_EXAMPLE
vi /etc/nagios/servers/clients.cfg
#+END_EXAMPLE
#+BEGIN_EXAMPLE
define service {
        use                             generic-service
        host_name                       client
        service_description             SSH
        check_command                   check_ssh
        notifications_enabled           0
        }
#+END_EXAMPLE
Save and close the file. Restart Nagios.
#+BEGIN_EXAMPLE
service nagios restart
#+END_EXAMPLE
Now log in to Nagios web console and check for the added services. Navigate to Services section, you’ll see the ssh service there.
[[./Nagios-Core-Mozilla-Firefox_008-790x478.jpg]]
To know more about object definitions such as Host definitions,
service definitions, contact definitions and more please do [[https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/objectdefinitions.html][visit
here]]. This page will describe you the description and format of all
object definitions.
